# Copyright (c) 2024 Realtek Semiconductor Corp.
# SPDX-License-Identifier: Apache-2.0

cmake_minimum_required(VERSION 3.10)


# Define a variable for the library name
if(1) #set to 1 to enable or variable to for depnedency

    file(GLOB HEADERS "*.h" "*.hpp")
	set(SOURCES
			"${CMAKE_CURRENT_SOURCE_DIR}/acc_api.c"
			"${CMAKE_CURRENT_SOURCE_DIR}/draw_img.c"
			"${CMAKE_CURRENT_SOURCE_DIR}/gui_matrix.c"
			"${CMAKE_CURRENT_SOURCE_DIR}/draw_font.c"
			"${CMAKE_CURRENT_SOURCE_DIR}/font_rendering_utils.c"
			"${CMAKE_CURRENT_SOURCE_DIR}/font_mem.c"
			"${CMAKE_CURRENT_SOURCE_DIR}/font_mem_img.c"
			"${CMAKE_CURRENT_SOURCE_DIR}/font_mem_matrix.c"
			"${CMAKE_CURRENT_SOURCE_DIR}/font_stb.c"
			"${CMAKE_CURRENT_SOURCE_DIR}/font_ttf.c"
			"${CMAKE_CURRENT_SOURCE_DIR}/engine_gray.c"
			"${CMAKE_CURRENT_SOURCE_DIR}/gui_post_process.c"
	)


    # Determine if we should create a library
    if((NOT HEADERS) AND (NOT SOURCES))
        message(STATUS "No source or header files found in ${CMAKE_CURRENT_SOURCE_DIR}.")
		target_include_directories(${GUI_TARGET_NAME} PUBLIC ${CMAKE_CURRENT_SOURCE_DIR})
    endif()

    if(HEADERS AND (NOT SOURCES))
        target_include_directories(${GUI_TARGET_NAME} PUBLIC ${CMAKE_CURRENT_SOURCE_DIR})
    endif()

    if(SOURCES AND (NOT HEADERS))
        target_sources(${GUI_TARGET_NAME} PRIVATE ${SOURCES})
    endif()

    if(SOURCES AND HEADERS)
        target_sources(${GUI_TARGET_NAME} PRIVATE ${SOURCES})
        target_include_directories(${GUI_TARGET_NAME} PUBLIC ${CMAKE_CURRENT_SOURCE_DIR})
    endif()

    # Process subdirectories regardless
    file(GLOB SUBDIRS RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} ${CMAKE_CURRENT_SOURCE_DIR}/*)

    foreach(subdir ${SUBDIRS})
        if(IS_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/${subdir})
            if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/${subdir}/CMakeLists.txt)
                add_subdirectory(${subdir})
            else()
                message(STATUS "Skipping directory ${subdir} as it does not contain a CMakeLists.txt file.")
            endif()
        endif()
    endforeach()
endif()
