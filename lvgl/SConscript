from building import *
import os
import menu_config

src = []
inc = []
group = []

cwd = GetCurrentDir() # get current dir path

port_src = Glob('*.c')
port_inc = [cwd]
group = group + DefineGroup('LVGL-port', port_src, depend = ['BUILD_USING_LVGL_GUI'], CPPPATH = port_inc)

# check if .h or .hpp files exsit
def check_h_hpp_exsit(path):
    file_dirs = os.listdir(path)
    for file_dir in file_dirs:
        if os.path.splitext(file_dir)[1] in ['.h', '.hpp']:
            return True
    return False

lvgl_cwd = cwd + '/'

lvgl_src_cwd = lvgl_cwd + 'src/'
inc = inc + [lvgl_src_cwd]
for root, dirs, files in os.walk(lvgl_src_cwd):
    for dir in dirs:
        current_path = os.path.join(root, dir)
        src = src + Glob(os.path.join(current_path,'*.c')) # add all .c files
        if check_h_hpp_exsit(current_path): # add .h and .hpp path
            inc = inc + [current_path]


if GetDepend('BUILD_USING_LVGL_EXAMPLES'):
    lvgl_src_cwd = lvgl_cwd + 'examples/'
    inc = inc + [lvgl_src_cwd]
    for root, dirs, files in os.walk(lvgl_src_cwd):
        for dir in dirs:
            current_path = os.path.join(root, dir)
            src = src + Glob(os.path.join(current_path,'*.c'))
            if check_h_hpp_exsit(current_path):
                inc = inc + [current_path]

if GetDepend('PKG_LVGL_USING_RLOTTIE'):
    lvgl_src_cwd = lvgl_cwd + 'rlottie/'
    inc = inc + [lvgl_src_cwd]
    for root, dirs, files in os.walk(lvgl_src_cwd):
        for dir in dirs:
            current_path = os.path.join(root, dir)
            src = src + Glob(os.path.join(current_path,'*.c'))
            src = src + Glob(os.path.join(current_path,'*.cpp'))
            if check_h_hpp_exsit(current_path):
                inc = inc + [current_path]

if GetDepend('BUILD_USING_LVGL_EXAMPLES'):
    lvgl_src_cwd = lvgl_cwd + 'demos/'
    inc = inc + [lvgl_src_cwd]
    for root, dirs, files in os.walk(lvgl_src_cwd):
        for dir in dirs:
            current_path = os.path.join(root, dir)
            src = src + Glob(os.path.join(current_path,'*.c'))
            if check_h_hpp_exsit(current_path):
                inc = inc + [current_path]



LOCAL_CFLAGS = ''
if menu_config.PLATFORM == 'gcc' or menu_config.PLATFORM == 'armclang': # GCC or Keil AC6
    LOCAL_CFLAGS += ' -std=c99'
    group = group + DefineGroup('LVGL', src, depend = ['BUILD_USING_LVGL_GUI'], CPPPATH = inc, LOCAL_CCFLAGS = LOCAL_CFLAGS)
elif menu_config.PLATFORM == 'armcc': # Keil AC5
    LOCAL_CPPDEFINES = ['PRIX32=\\"x\\"']
    LOCAL_CFLAGS += ' --c99 --gnu --diag_suppress=188 --diag_suppress=546 --diag_suppress=550 --diag_suppress=111 --diag_suppress=68 --diag_suppress=870'
    group = group + DefineGroup('LVGL', src, depend = ['BUILD_USING_LVGL_GUI'], CPPPATH = inc, LOCAL_CCFLAGS = LOCAL_CFLAGS, LOCAL_CPPDEFINES = LOCAL_CPPDEFINES)



list = os.listdir(cwd)
for d in list:
    path = os.path.join(cwd, d)
    if os.path.isfile(os.path.join(path, 'SConscript')):
        group = group + SConscript(os.path.join(d, 'SConscript'))

Return('group')
